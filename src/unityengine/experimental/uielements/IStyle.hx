package unityengine.experimental.uielements;

@:native("UnityEngine.Experimental.UIElements.IStyle")
extern interface IStyle {
	var width : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var height : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var maxWidth : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var maxHeight : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var minWidth : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var minHeight : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var flex : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var flexBasis : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var flexGrow : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var flexShrink : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var flexDirection : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.experimental.uielements.styleenums.FlexDirection>;
	var flexWrap : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.experimental.uielements.styleenums.Wrap>;
	var overflow : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.experimental.uielements.styleenums.Overflow>;
	var positionLeft : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var positionTop : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var positionRight : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var positionBottom : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var marginLeft : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var marginTop : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var marginRight : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var marginBottom : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var borderLeft : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var borderTop : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var borderRight : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var borderBottom : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var paddingLeft : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var paddingTop : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var paddingRight : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var paddingBottom : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var positionType : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.experimental.uielements.styleenums.PositionType>;
	var alignSelf : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.experimental.uielements.styleenums.Align>;
	var textAlignment : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.TextAnchor>;
	var fontStyle : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.FontStyle>;
	var textClipping : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.TextClipping>;
	var font : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.Font>;
	var fontSize : unityengine.experimental.uielements.stylesheets.StyleValue<Int>;
	var wordWrap : unityengine.experimental.uielements.stylesheets.StyleValue<Bool>;
	var textColor : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.Color>;
	var backgroundColor : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.Color>;
	var borderColor : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.Color>;
	var backgroundImage : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.Texture2D>;
	var backgroundSize : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.ScaleMode>;
	var alignItems : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.experimental.uielements.styleenums.Align>;
	var alignContent : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.experimental.uielements.styleenums.Align>;
	var justifyContent : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.experimental.uielements.styleenums.Justify>;
	var borderLeftWidth : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var borderTopWidth : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var borderRightWidth : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var borderBottomWidth : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var borderRadius : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var borderTopLeftRadius : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var borderTopRightRadius : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var borderBottomRightRadius : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var borderBottomLeftRadius : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var sliceLeft : unityengine.experimental.uielements.stylesheets.StyleValue<Int>;
	var sliceTop : unityengine.experimental.uielements.stylesheets.StyleValue<Int>;
	var sliceRight : unityengine.experimental.uielements.stylesheets.StyleValue<Int>;
	var sliceBottom : unityengine.experimental.uielements.stylesheets.StyleValue<Int>;
	var opacity : unityengine.experimental.uielements.stylesheets.StyleValue<cs.system.Single>;
	var cursor : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.experimental.uielements.CursorStyle>;
	var visibility : unityengine.experimental.uielements.stylesheets.StyleValue<unityengine.experimental.uielements.styleenums.Visibility>;
}
